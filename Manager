import java.util.*;
import java.util.concurrent.*;

public class Manager extends Personel{
    private int Tasktrack= 0;
    private int num_complete_task;
    Scanner scnr = new Scanner(System.in);
  
  public Manager(String NAME, int AGE, int ID, double WAGE, int HOURS, int DAYS){
  super(NAME,AGE,ID,WAGE,HOURS,DAYS);
  }

  //Could be more effecient 
  public boolean isTasksComplete(Personel employee){
      if(employee.getTasks() != 0){
          return false;
      }
      return true;
  }

  //Display all team members...it works!
  public void displayTeam(ArrayList<Personel> employees){
    System.out.println("Here is the list of employees in " + employees.get(0).getName() + "'s team: ");  
    for(int i=1; i < employees.size(); i++){
        System.out.println(employees.get(i).getName() + ", id number: " + employees.get(i).getId());

        try {
            TimeUnit.SECONDS.sleep(2);
        } catch (InterruptedException ie) {
            Thread.currentThread().interrupt();
        }

      }
  }
  
  //Displays people to hire...it works
  public void displayOption(ArrayList<Personel> options){
      System.out.println("Here is a list of possible employees: ");
      for(int i = 0; i < options.size(); i++){
        System.out.println(options.get(i).getName() + " is "+ options.get(i).getAge()+  ", the corresponding id num is " + options.get(i).getId() + ", and they request a yearly salary of " + options.get(i).getSalary() + "$");
        try {
            TimeUnit.SECONDS.sleep(2);
        } catch (InterruptedException ie) {
            Thread.currentThread().interrupt();
        }
      }
  }

    //Firing an employee.... it works!
    public void firing(ArrayList<Personel> g1, ArrayList<Personel> g2){
        System.out.println("Team " + g1.get(0).getName() + " represents 1");
        System.out.println("Team " + g2.get(0).getName() + " represents 2");
        System.out.println("Input the number of the team desired to remove an employee: ");

        int group = scnr.nextInt();
        
        if(group != 1 && group !=2) {
            System.out.println("Your inputted value does not match!");
            firing(g1, g2);
        }


        if(group == 1){
            displayTeam(g1);
            System.out.println("Input the id number of your chosen option: ");
            int id_num = scnr.nextInt(); 
            
            Personel toRemove = new Personel();
            
            for(int i = 0; i < g1.size(); i++){
                if(id_num == g1.get(i).getId()){
                    toRemove = g1.get(i);
                    g1.remove(i);
                    System.out.println("You have just removed " + toRemove.getName() + " from " + g1.get(0).getName() + " 's team.");
                }
                
            }
        }
        
        
        if(group == 2){
            displayTeam(g2);
            System.out.println("Input the id number of your chosen option: ");
            int id_num = scnr.nextInt(); 
            Personel toRemove = new Personel();
            
            for(int i = 0; i < g2.size(); i++){
                if(id_num == g2.get(i).getId()){
                    toRemove = g2.get(i);
                    g2.remove(i);
                    System.out.println("You have just removed " + toRemove.getName() + " from " + g2.get(0).getName() + " 's team.");
                }
            }
            
        }
        

    }
    
    //Hiring an employee
    public void hiring(ArrayList<Personel> options, ArrayList<Personel> g1, ArrayList<Personel> g2){
        System.out.println("Team " + g1.get(0).getName() + " represents 1");
        System.out.println("Team " + g2.get(0).getName() + " represents 2");
        System.out.println("Input the number of the team desired to add an employee: ");
        int team = scnr.nextInt();
        
        if(team != 1 && team != 2){
            System.out.println("You have inputted an invalid number!");
            hiring(options, g1, g2);
        }
        
        
        if(team == 1){
            Personel toAdd = new Personel(); //The new employee to add to either of the teams

            displayOption(options);
            System.out.println("Input the id number of your chosen option: ");
            int id_num = scnr.nextInt();
            
            for(int i = 0; i < options.size(); i++){
                if(id_num == options.get(i).getId()){
                    toAdd = options.get(i);
                    options.remove(i);
                }
            }
            g1.add(toAdd);
            System.out.println("You have just added " + toAdd.getName() + " to " + g1.get(0).getName() + "'s team");
        }
        
        if(team == 2){
            Personel toAdd = new Personel(); //The new employee to add to either of the teams

            displayOption(options);
            System.out.println("Input the id number of your chosen option: ");
            int id_num = scnr.nextInt();
            
            for(int i = 0; i < options.size(); i++){
                if(id_num == options.get(i).getId()){
                    toAdd = options.get(i);
                    options.remove(i);
                }
            }
            g2.add(toAdd);
            System.out.println("You have just added " + toAdd.getName() + " to " + g2.get(0).getName() + "'s team");
        }
        
    }
       
}
