import java.util.*;

public class Manager extends Personel{
    private int Tasktrack= 0;
    private int num_complete_task;
  
  public Manager(String NAME, int AGE, int ID, double WAGE, int HOURS, int DAYS){
  super(NAME,AGE,ID,WAGE,HOURS,DAYS);
  }
  
  //Could be more effecient 
  public boolean isTasksComplete(Personel employee){
      if(employee.getTasks() != 0){
          return false;
      }
      return true;
  }
  
  //Checks whether an employee completed their tasks for the day
  //Adds the employee to list if tasks not completed
//   public boolean isTasksCom(Personel[] employees){
//     int incomp = 0;
//     ArrayList<Personel> personelIncomp = new ArrayList<Personel>();
//     for(Personel employee:employees){
//       //If at the end of a day's work, the number of tasks is
//       //above 0, then threshold is not passed
//       if(employee.getTasks != 0){
//         incomp++;
//         personelIncomp.add(employee);
//       }
//     }
    
    //Firing an employee
    public Personel[] firing(ArrayList<Personel> employees, Personel toFire){
    //Transform array to ArrayList
    List<Personel> list = new List<Personel>();
    Arrays.asList(employees);

    //Removing toFire from the ArrayList
    list.remove(toFire);
    System.out.print("You have just fired: " + toFire.getName());
    //Turn ArrayList back to Array
    Personel[] new_team = list.toArray();
    //return Array
    return new_team;
    }
    
//     //Hiring an employee
//     public Personel[] hiring(Personel[] employees, Personel toHire){
//     //Transform array to ArrayList
//     //Adding toHire from a ArrayList of potential candidates
//     //Turn ArrayList back to Array
//     //return Array
//     }
       
}
